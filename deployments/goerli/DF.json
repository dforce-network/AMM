{
  "address": "0xa77CfE70179A3cfc7a21c22Af7919BdA8FafD1f0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "symbol_",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "guy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": true,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "guy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "foo",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "bar",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "fax",
          "type": "bytes"
        }
      ],
      "name": "LogNote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "LogSetAuthority",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "LogSetOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "allocateTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        }
      ],
      "name": "approvex",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "guy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "base",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        }
      ],
      "name": "pow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "authority_",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "name_",
          "type": "bytes32"
        }
      ],
      "name": "setName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "start",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stopped",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wad",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8c430569b2b2e8f57c2a78a6a47190fd99d7088478dd0e847082ec6bda875c38",
  "receipt": {
    "to": null,
    "from": "0xAE4bdBb0824C9B602589a5DaD2aD96C8A2AcC607",
    "contractAddress": "0xa77CfE70179A3cfc7a21c22Af7919BdA8FafD1f0",
    "transactionIndex": 61,
    "gasUsed": "1170318",
    "logsBloom": "0x
    "blockHash": "0x039b0f9b9287aea80b751e3307958b704e1b098cfffbc72cf2a82ef6b50442ac",
    "transactionHash": "0x8c430569b2b2e8f57c2a78a6a47190fd99d7088478dd0e847082ec6bda875c38",
    "logs": [
      {
        "transactionIndex": 61,
        "blockNumber": 8529565,
        "transactionHash": "0x8c430569b2b2e8f57c2a78a6a47190fd99d7088478dd0e847082ec6bda875c38",
        "address": "0xa77CfE70179A3cfc7a21c22Af7919BdA8FafD1f0",
        "topics": [
          "0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94",
          "0x000000000000000000000000ae4bdbb0824c9b602589a5dad2ad96c8a2acc607"
        ],
        "data": "0x",
        "logIndex": 73,
        "blockHash": "0x039b0f9b9287aea80b751e3307958b704e1b098cfffbc72cf2a82ef6b50442ac"
      }
    ],
    "blockNumber": 8529565,
    "cumulativeGasUsed": "6777780",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4446000000000000000000000000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "865e47ef37da3f36f1aed81c4ba88875",
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allocateTo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approvex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"base\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"}],\"name\":\"pow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"pow(uint256,uint256)\":{\"details\":\"x to the power of y power(base, exponent)\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/test/DF.sol\":\"DSToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test/DF.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at Etherscan.io on 2019-07-30\\r\\n*/\\r\\n\\r\\npragma solidity ^0.5.2;\\r\\n\\r\\ncontract DSMath {\\r\\n    function add(uint x, uint y) internal pure returns (uint z) {\\r\\n        require((z = x + y) >= x, \\\"ds-math-add-overflow\\\");\\r\\n    }\\r\\n    function sub(uint x, uint y) internal pure returns (uint z) {\\r\\n        require((z = x - y) <= x, \\\"ds-math-sub-underflow\\\");\\r\\n    }\\r\\n    function mul(uint x, uint y) internal pure returns (uint z) {\\r\\n        require(y == 0 || (z = x * y) / y == x, \\\"ds-math-mul-overflow\\\");\\r\\n    }\\r\\n\\r\\n    function div(uint x, uint y) internal pure returns (uint z) {\\r\\n        require(y > 0, \\\"ds-math-div-overflow\\\");\\r\\n        z = x / y;\\r\\n    }\\r\\n\\r\\n    function min(uint x, uint y) internal pure returns (uint z) {\\r\\n        return x <= y ? x : y;\\r\\n    }\\r\\n    function max(uint x, uint y) internal pure returns (uint z) {\\r\\n        return x >= y ? x : y;\\r\\n    }\\r\\n    // function imin(int x, int y) internal pure returns (int z) {\\r\\n    //     return x <= y ? x : y;\\r\\n    // }\\r\\n    // function imax(int x, int y) internal pure returns (int z) {\\r\\n    //     return x >= y ? x : y;\\r\\n    // }\\r\\n\\r\\n    uint constant WAD = 10 ** 18;\\r\\n    // uint constant RAY = 10 ** 27;\\r\\n\\r\\n    // function wmul(uint x, uint y) internal pure returns (uint z) {\\r\\n    //     z = add(mul(x, y), WAD / 2) / WAD;\\r\\n    // }\\r\\n    // function rmul(uint x, uint y) internal pure returns (uint z) {\\r\\n    //     z = add(mul(x, y), RAY / 2) / RAY;\\r\\n    // }\\r\\n    function wdiv(uint x, uint y) internal pure returns (uint z) {\\r\\n        z = add(mul(x, WAD), y / 2) / y;\\r\\n    }\\r\\n    // function rdiv(uint x, uint y) internal pure returns (uint z) {\\r\\n    //     z = add(mul(x, RAY), y / 2) / y;\\r\\n    // }\\r\\n\\r\\n    // This famous algorithm is called \\\"exponentiation by squaring\\\"\\r\\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\\r\\n    //\\r\\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\\r\\n    //\\r\\n    // These facts are why it works:\\r\\n    //\\r\\n    //  If n is even, then x^n = (x^2)^(n/2).\\r\\n    //  If n is odd,  then x^n = x * x^(n-1),\\r\\n    //   and applying the equation for even x gives\\r\\n    //    x^n = x * (x^2)^((n-1) / 2).\\r\\n    //\\r\\n    //  Also, EVM division is flooring and\\r\\n    //    floor[(n-1) / 2] = floor[n / 2].\\r\\n    //\\r\\n    // function rpow(uint _x, uint n) internal pure returns (uint z) {\\r\\n    //     uint x = _x;\\r\\n    //     z = n % 2 != 0 ? x : RAY;\\r\\n\\r\\n    //     for (n /= 2; n != 0; n /= 2) {\\r\\n    //         x = rmul(x, x);\\r\\n\\r\\n    //         if (n % 2 != 0) {\\r\\n    //             z = rmul(z, x);\\r\\n    //         }\\r\\n    //     }\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev x to the power of y power(base, exponent)\\r\\n     */\\r\\n    function pow(uint256 base, uint256 exponent) public pure returns (uint256) {\\r\\n        if (exponent == 0) {\\r\\n            return 1;\\r\\n        }\\r\\n        else if (exponent == 1) {\\r\\n            return base;\\r\\n        }\\r\\n        else if (base == 0 && exponent != 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        else {\\r\\n            uint256 z = base;\\r\\n            for (uint256 i = 1; i < exponent; i++)\\r\\n                z = mul(z, base);\\r\\n            return z;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DSAuthEvents {\\r\\n    event LogSetAuthority (address indexed authority);\\r\\n    event LogSetOwner     (address indexed owner);\\r\\n}\\r\\n\\r\\ncontract DSAuth is DSAuthEvents {\\r\\n    address      public  authority;\\r\\n    address      public  owner;\\r\\n\\r\\n    constructor() public {\\r\\n        owner = msg.sender;\\r\\n        emit LogSetOwner(msg.sender);\\r\\n    }\\r\\n\\r\\n    function setOwner(address owner_)\\r\\n        public\\r\\n        onlyOwner\\r\\n    {\\r\\n        require(owner_ != address(0), \\\"invalid owner address\\\");\\r\\n        owner = owner_;\\r\\n        emit LogSetOwner(owner);\\r\\n    }\\r\\n\\r\\n    function setAuthority(address authority_)\\r\\n        public\\r\\n        onlyOwner\\r\\n    {\\r\\n        authority = authority_;\\r\\n        emit LogSetAuthority(address(authority));\\r\\n    }\\r\\n\\r\\n    modifier auth {\\r\\n        require(isAuthorized(msg.sender), \\\"ds-auth-unauthorized\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        require(isOwner(msg.sender), \\\"ds-auth-non-owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function isOwner(address src) public view returns (bool) {\\r\\n        return bool(src == owner);\\r\\n    }\\r\\n\\r\\n    function isAuthorized(address src) internal view returns (bool) {\\r\\n        if (src == address(this)) {\\r\\n            return true;\\r\\n        } else if (src == owner) {\\r\\n            return true;\\r\\n        } else if (authority == address(0)) {\\r\\n            return false;\\r\\n        } else if (src == authority) {\\r\\n            return true;\\r\\n        } else {\\r\\n            return false;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DSNote {\\r\\n    event LogNote(\\r\\n        bytes4   indexed  sig,\\r\\n        address  indexed  guy,\\r\\n        bytes32  indexed  foo,\\r\\n        bytes32  indexed  bar,\\r\\n        uint256           wad,\\r\\n        bytes             fax\\r\\n    ) anonymous;\\r\\n\\r\\n    modifier note {\\r\\n        bytes32 foo;\\r\\n        bytes32 bar;\\r\\n        uint256 wad;\\r\\n\\r\\n        assembly {\\r\\n            foo := calldataload(4)\\r\\n            bar := calldataload(36)\\r\\n            wad := callvalue\\r\\n        }\\r\\n\\r\\n        emit LogNote(msg.sig, msg.sender, foo, bar, wad, msg.data);\\r\\n\\r\\n        _;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DSStop is DSNote, DSAuth, DSMath {\\r\\n    bool public stopped;\\r\\n\\r\\n    modifier stoppable {\\r\\n        require(!stopped, \\\"ds-stop-is-stopped\\\");\\r\\n        _;\\r\\n    }\\r\\n    function stop() public onlyOwner note {\\r\\n        stopped = true;\\r\\n    }\\r\\n    function start() public onlyOwner note {\\r\\n        stopped = false;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract ERC20Events {\\r\\n    event Approval(address indexed src, address indexed guy, uint wad);\\r\\n    event Transfer(address indexed src, address indexed dst, uint wad);\\r\\n}\\r\\n\\r\\ncontract ERC20 is ERC20Events {\\r\\n    function totalSupply() public view returns (uint);\\r\\n    function balanceOf(address guy) public view returns (uint);\\r\\n    function allowance(address src, address guy) public view returns (uint);\\r\\n\\r\\n    function approve(address guy, uint wad) public returns (bool);\\r\\n    function transfer(address dst, uint wad) public returns (bool);\\r\\n    function transferFrom(address src, address dst, uint wad) public returns (bool);\\r\\n}\\r\\n\\r\\ncontract DSTokenBase is ERC20, DSMath {\\r\\n    uint256                                            _supply;\\r\\n    mapping (address => uint256)                       _balances;\\r\\n    mapping (address => mapping (address => uint256))  _approvals;\\r\\n\\r\\n    constructor(uint supply) public {\\r\\n        _supply = supply;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view returns (uint) {\\r\\n        return _supply;\\r\\n    }\\r\\n    function balanceOf(address src) public view returns (uint) {\\r\\n        return _balances[src];\\r\\n    }\\r\\n    function allowance(address src, address guy) public view returns (uint) {\\r\\n        return _approvals[src][guy];\\r\\n    }\\r\\n\\r\\n    function transfer(address dst, uint wad) public returns (bool) {\\r\\n        return transferFrom(msg.sender, dst, wad);\\r\\n    }\\r\\n\\r\\n    function transferFrom(address src, address dst, uint wad)\\r\\n        public\\r\\n        returns (bool)\\r\\n    {\\r\\n        if (src != msg.sender) {\\r\\n            require(_approvals[src][msg.sender] >= wad, \\\"ds-token-insufficient-approval\\\");\\r\\n            _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);\\r\\n        }\\r\\n\\r\\n        require(_balances[src] >= wad, \\\"ds-token-insufficient-balance\\\");\\r\\n        _balances[src] = sub(_balances[src], wad);\\r\\n        _balances[dst] = add(_balances[dst], wad);\\r\\n\\r\\n        emit Transfer(src, dst, wad);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function approve(address guy, uint wad) public returns (bool) {\\r\\n        _approvals[msg.sender][guy] = wad;\\r\\n\\r\\n        emit Approval(msg.sender, guy, wad);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DSToken is DSTokenBase(0), DSStop {\\r\\n\\r\\n    bytes32  public  name = \\\"\\\";\\r\\n    bytes32  public  symbol;\\r\\n    uint256  public  decimals = 18;\\r\\n\\r\\n    constructor(bytes32 symbol_) public {\\r\\n        symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    function setName(bytes32 name_) public onlyOwner {\\r\\n        name = name_;\\r\\n    }\\r\\n\\r\\n    function approvex(address guy) public stoppable returns (bool) {\\r\\n        return super.approve(guy, uint(-1));\\r\\n    }\\r\\n\\r\\n    function approve(address guy, uint wad) public stoppable returns (bool) {\\r\\n        require(_approvals[msg.sender][guy] == 0 || wad == 0); //take care of re-approve.\\r\\n        return super.approve(guy, wad);\\r\\n    }\\r\\n\\r\\n    function transferFrom(address src, address dst, uint wad)\\r\\n        public\\r\\n        stoppable\\r\\n        returns (bool)\\r\\n    {\\r\\n        if (src != msg.sender && _approvals[src][msg.sender] != uint(-1)) {\\r\\n            require(_approvals[src][msg.sender] >= wad, \\\"ds-token-insufficient-approval\\\");\\r\\n            _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);\\r\\n        }\\r\\n\\r\\n        require(_balances[src] >= wad, \\\"ds-token-insufficient-balance\\\");\\r\\n        _balances[src] = sub(_balances[src], wad);\\r\\n        _balances[dst] = add(_balances[dst], wad);\\r\\n\\r\\n        emit Transfer(src, dst, wad);\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function mint(address guy, uint wad) public auth stoppable {\\r\\n        _mint(guy, wad);\\r\\n    }\\r\\n\\r\\n    function burn(address guy, uint wad) public auth stoppable {\\r\\n        _burn(guy, wad);\\r\\n    }\\r\\n\\r\\n    function _mint(address guy, uint wad) internal {\\r\\n        require(guy != address(0), \\\"ds-token-mint: mint to the zero address\\\");\\r\\n\\r\\n        _balances[guy] = add(_balances[guy], wad);\\r\\n        _supply = add(_supply, wad);\\r\\n        emit Transfer(address(0), guy, wad);\\r\\n    }\\r\\n\\r\\n    function _burn(address guy, uint wad) internal {\\r\\n        require(guy != address(0), \\\"ds-token-burn: burn from the zero address\\\");\\r\\n        require(_balances[guy] >= wad, \\\"ds-token-insufficient-balance\\\");\\r\\n\\r\\n        if (guy != msg.sender && _approvals[guy][msg.sender] != uint(-1)) {\\r\\n            require(_approvals[guy][msg.sender] >= wad, \\\"ds-token-insufficient-approval\\\");\\r\\n            _approvals[guy][msg.sender] = sub(_approvals[guy][msg.sender], wad);\\r\\n        }\\r\\n\\r\\n        _balances[guy] = sub(_balances[guy], wad);\\r\\n        _supply = sub(_supply, wad);\\r\\n        emit Transfer(guy, address(0), wad);\\r\\n    }\\r\\n\\r\\n    function allocateTo(address _to, uint256 _amount) public {\\r\\n        _mint(_to, _amount);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x27e8bc4fcb89cb5eeedf63d8d841ea1816e33c591604c2dace97d8afed29c551\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80635ac801fe116100c35780639dc29fac1161007c5780639dc29fac14610360578063a73832721461038c578063a9059cbb146103b2578063be9a6555146103de578063bf7e214f146103e6578063dd62ed3e146103ee5761014d565b80635ac801fe146102c357806370a08231146102e057806375f12b21146103065780637a9e5e4b1461030e5780638da5cb5b1461033457806395d89b41146103585761014d565b806318160ddd1161011557806318160ddd1461020857806323b872dd146102105780632e4c697f146102465780632f54bf6e14610269578063313ce5671461028f57806340c10f19146102975761014d565b806306fdde031461015257806307da68f51461016c57806308bca56614610176578063095ea7b3146101a257806313af4035146101e2575b600080fd5b61015a61041c565b60408051918252519081900360200190f35b610174610422565b005b6101746004803603604081101561018c57600080fd5b506001600160a01b0381351690602001356104e6565b6101ce600480360360408110156101b857600080fd5b506001600160a01b0381351690602001356104f4565b604080519115158252519081900360200190f35b610174600480360360208110156101f857600080fd5b50356001600160a01b031661058e565b61015a61067f565b6101ce6004803603606081101561022657600080fd5b506001600160a01b03813581169160208101359091169060400135610685565b61015a6004803603604081101561025c57600080fd5b5080359060200135610903565b6101ce6004803603602081101561027f57600080fd5b50356001600160a01b0316610964565b61015a61097b565b610174600480360360408110156102ad57600080fd5b506001600160a01b038135169060200135610981565b610174600480360360208110156102d957600080fd5b5035610a1f565b61015a600480360360208110156102f657600080fd5b50356001600160a01b0316610a72565b6101ce610a8d565b6101746004803603602081101561032457600080fd5b50356001600160a01b0316610a96565b61033c610b30565b604080516001600160a01b039092168252519081900360200190f35b61015a610b3f565b6101746004803603604081101561037657600080fd5b506001600160a01b038135169060200135610b45565b6101ce600480360360208110156103a257600080fd5b50356001600160a01b0316610bed565b6101ce600480360360408110156103c857600080fd5b506001600160a01b038135169060200135610c49565b610174610c56565b61033c610d17565b61015a6004803603604081101561040457600080fd5b506001600160a01b0381358116916020013516610d26565b60065481565b61042b33610964565b610470576040805162461bcd60e51b8152602060048201526011602482015270323996b0baba3416b737b716b7bbb732b960791b604482015290519081900360640190fd5b604080513480825260208201838152369383018490526004359360243593849286923392600080356001600160e01b03191693889391929060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a450506005805460ff1916600117905550565b6104f08282610d51565b5050565b60055460009060ff1615610544576040805162461bcd60e51b8152602060048201526012602482015271191ccb5cdd1bdc0b5a5ccb5cdd1bdc1c195960721b604482015290519081900360640190fd5b3360009081526004602090815260408083206001600160a01b03871684529091529020541580610572575081155b61057b57600080fd5b6105858383610e27565b90505b92915050565b61059733610964565b6105dc576040805162461bcd60e51b8152602060048201526011602482015270323996b0baba3416b737b716b7bbb732b960791b604482015290519081900360640190fd5b6001600160a01b03811661062f576040805162461bcd60e51b8152602060048201526015602482015274696e76616c6964206f776e6572206164647265737360581b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b60025490565b60055460009060ff16156106d5576040805162461bcd60e51b8152602060048201526012602482015271191ccb5cdd1bdc0b5a5ccb5cdd1bdc1c195960721b604482015290519081900360640190fd5b6001600160a01b038416331480159061071357506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b156107e3576001600160a01b0384166000908152600460209081526040808320338452909152902054821115610790576040805162461bcd60e51b815260206004820152601e60248201527f64732d746f6b656e2d696e73756666696369656e742d617070726f76616c0000604482015290519081900360640190fd5b6001600160a01b03841660009081526004602090815260408083203384529091529020546107be9083610e8d565b6001600160a01b03851660009081526004602090815260408083203384529091529020555b6001600160a01b038416600090815260036020526040902054821115610850576040805162461bcd60e51b815260206004820152601d60248201527f64732d746f6b656e2d696e73756666696369656e742d62616c616e6365000000604482015290519081900360640190fd5b6001600160a01b0384166000908152600360205260409020546108739083610e8d565b6001600160a01b0380861660009081526003602052604080822093909355908516815220546108a29083610edd565b6001600160a01b0380851660008181526003602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60008161091257506001610588565b8160011415610922575081610588565b8215801561092f57508115155b1561093c57506000610588565b8260015b8381101561095c576109528286610f2c565b9150600101610940565b509050610588565b6001546001600160a01b038281169116145b919050565b60085481565b61098a33610f8f565b6109d2576040805162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604482015290519081900360640190fd5b60055460ff16156104e6576040805162461bcd60e51b8152602060048201526012602482015271191ccb5cdd1bdc0b5a5ccb5cdd1bdc1c195960721b604482015290519081900360640190fd5b610a2833610964565b610a6d576040805162461bcd60e51b8152602060048201526011602482015270323996b0baba3416b737b716b7bbb732b960791b604482015290519081900360640190fd5b600655565b6001600160a01b031660009081526003602052604090205490565b60055460ff1681565b610a9f33610964565b610ae4576040805162461bcd60e51b8152602060048201526011602482015270323996b0baba3416b737b716b7bbb732b960791b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b6001546001600160a01b031681565b60075481565b610b4e33610f8f565b610b96576040805162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604482015290519081900360640190fd5b60055460ff1615610be3576040805162461bcd60e51b8152602060048201526012602482015271191ccb5cdd1bdc0b5a5ccb5cdd1bdc1c195960721b604482015290519081900360640190fd5b6104f08282611006565b60055460009060ff1615610c3d576040805162461bcd60e51b8152602060048201526012602482015271191ccb5cdd1bdc0b5a5ccb5cdd1bdc1c195960721b604482015290519081900360640190fd5b61058882600019610e27565b6000610585338484610685565b610c5f33610964565b610ca4576040805162461bcd60e51b8152602060048201526011602482015270323996b0baba3416b737b716b7bbb732b960791b604482015290519081900360640190fd5b604080513480825260208201838152369383018490526004359360243593849286923392600080356001600160e01b03191693889391929060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a450506005805460ff1916905550565b6000546001600160a01b031681565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6001600160a01b038216610d965760405162461bcd60e51b81526004018080602001828103825260278152602001806112816027913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902054610db99082610edd565b6001600160a01b038316600090815260036020526040902055600254610ddf9082610edd565b6002556040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b3360008181526004602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b80820382811115610588576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b80820182811015610588576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fd5b6000811580610f4757505080820282828281610f4457fe5b04145b610588576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b60006001600160a01b038216301415610faa57506001610976565b6001546001600160a01b0383811691161415610fc857506001610976565b6000546001600160a01b0316610fe057506000610976565b6000546001600160a01b0383811691161415610ffe57506001610976565b506000610976565b6001600160a01b03821661104b5760405162461bcd60e51b81526004018080602001828103825260298152602001806112586029913960400191505060405180910390fd5b6001600160a01b0382166000908152600360205260409020548111156110b8576040805162461bcd60e51b815260206004820152601d60248201527f64732d746f6b656e2d696e73756666696369656e742d62616c616e6365000000604482015290519081900360640190fd5b6001600160a01b03821633148015906110f657506001600160a01b038216600090815260046020908152604080832033845290915290205460001914155b156111c6576001600160a01b0382166000908152600460209081526040808320338452909152902054811115611173576040805162461bcd60e51b815260206004820152601e60248201527f64732d746f6b656e2d696e73756666696369656e742d617070726f76616c0000604482015290519081900360640190fd5b6001600160a01b03821660009081526004602090815260408083203384529091529020546111a19082610e8d565b6001600160a01b03831660009081526004602090815260408083203384529091529020555b6001600160a01b0382166000908152600360205260409020546111e99082610e8d565b6001600160a01b03831660009081526003602052604090205560025461120f9082610e8d565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3505056fe64732d746f6b656e2d6275726e3a206275726e2066726f6d20746865207a65726f206164647265737364732d746f6b656e2d6d696e743a206d696e7420746f20746865207a65726f2061646472657373a265627a7a723158205da64a8b8a1e8b7d59bbe39b96017fd4e0c5a1de0bb7d2f90a6e4b19f5c0131f64736f6c63430005100032",
  "devdoc": {
    "methods": {
      "pow(uint256,uint256)": {
        "details": "x to the power of y power(base, exponent)"
      }
    }
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 233,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "authority",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 235,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 534,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "_supply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 538,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "_balances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 544,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "_approvals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 423,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "stopped",
        "offset": 0,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 730,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "name",
        "offset": 0,
        "slot": "6",
        "type": "t_bytes32"
      },
      {
        "astId": 732,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "symbol",
        "offset": 0,
        "slot": "7",
        "type": "t_bytes32"
      },
      {
        "astId": 735,
        "contract": "contracts/test/DF.sol:DSToken",
        "label": "decimals",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}